# app/bot/handlers/handlers_client.py

import re
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import (
    Message,
    CallbackQuery,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
    Contact,
    FSInputFile,
    ReplyKeyboardRemove
)
from aiogram.filters.state import StateFilter
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from sqlmodel import select
from app.config import settings
from app.db.models import Clients
from app.db.session import async_session
from app.api.yclients import YClientsAPI

clients_router = Router()

# –†–µ–≥–µ–∫—Å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ (–º—ã —Ç–µ–ø–µ—Ä—å –∂–¥–µ–º –µ–≥–æ –∏–∑ Contact)
PHONE_RE = re.compile(r"""
    ^\s*
    (?:\+7|8)?      # +7 –∏–ª–∏ 8 –≤ –Ω–∞—á–∞–ª–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    (\d{10})        # 10 —Ü–∏—Ñ—Ä
    \s*$
""", re.VERBOSE)

class AuthStates(StatesGroup):
    waiting_for_phone = State()


# 1) /start —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É
@clients_router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    async with async_session() as session:
        client = None
        if message.from_user:
            telegram_user_id = message.from_user.id
            result = await session.execute(
                select(Clients).where(Clients.telegram_user_id == telegram_user_id)
            )
            client = result.scalar_one_or_none()
        if client:
            # –£–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
            await message.answer(
                f" <b>{client.name}</b>, —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ —á–∏—Å–ª–µ –Ω–∞—à–∏—Ö –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π!\n"
                f"–í–∞—à –Ω–æ–º–µ—Ä <b>{client.phone_number}</b> —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.\n\n"
                "–í—ã —Å—Ç–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ <b>DOG STYLE</b> ‚Äî —Ç–µ–ø–µ—Ä—å –∑–∞ –∫–∞–∂–¥–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å—ã –∏ –ø—Ä–∏—è—Ç–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏.\n\n"
                "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "/balance - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –±–∞–ª–ª–æ–≤\n"
                "/reserve - –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É\n"
                "/contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏\n\n"
                "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º! ‚ù§Ô∏èü™Ñ",
                parse_mode="HTML",
            )
            await state.clear()
        else:
            await state.clear()
            kb = ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)]],
                resize_keyboard=True,
                one_time_keyboard=True,
            )
            await message.answer_photo(
                photo=FSInputFile("app/media/welcome.png"),
                caption="<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ DOG STYLE! üíû</b>"
                        "–£—á–∞—Å—Ç–≤—É–π—Ç–µ –∏ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–π—Ç–µ –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã –∑–∞ –∫–∞–∂–¥–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ.\n"
                        "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –Ω–∞—á–∞–ª–∞ —É—á–∞—Å—Ç–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.üì≤",
                parse_mode="HTML",
                reply_markup=kb,
            )
            await state.set_state(AuthStates.waiting_for_phone)


# 2) –ü–æ–ª—É—á–∏–ª–∏ Contact –æ—Ç Telegram

@clients_router.message(F.contact, StateFilter(AuthStates.waiting_for_phone))
async def process_contact(message: Message, state: FSMContext):
    contact: Contact = message.contact
    phone = contact.phone_number
    telegram_user_id = message.from_user.id  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º user_id

    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
    if phone.startswith("8") and len(phone) == 11:
        phone = "+7" + phone[1:]
    elif phone.startswith("7") and len(phone) == 11:
        phone = "+" + phone
    elif phone.startswith("+7") and len(phone) == 12:
        pass
    else:
        return await message.reply(
            "‚ùóÔ∏è –ü–æ—Ö–æ–∂–µ, –≤–∞—à –Ω–æ–º–µ—Ä –≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. "
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

    await _register_or_find_client(phone, telegram_user_id, message, state)


async def _register_or_find_client(phone: str, telegram_user_id: int, message: Message, state: FSMContext):
    # 1) –ò—â–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
    async with async_session() as session:
        result = await session.execute(
            select(Clients).where(Clients.phone_number == phone)
        )
        client = result.scalar_one_or_none()

        if client:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º user_id
            client.is_in_loyalty = True
            client.telegram_user_id = telegram_user_id
            session.add(client)
            await session.commit()
        else:
            # 2) –ò—â–µ–º –ø–æ –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º YClients –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ
            api = YClientsAPI()  # –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
            found = None
            page = 1
            page_size = 200

            try:
                while True:
                    resp = await api.client.post(
                        f"/company/{settings.COMPANY_ID}/clients/search",  # ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
                        json={
                            "page": page,
                            "page_size": page_size,
                            "fields": ["id", "phone", "name"],  # ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
                            "filters": [],  # ‚úÖ –î–∞–∂–µ –µ—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã –Ω–µ –Ω—É–∂–Ω—ã
                            "operation": "AND",  # ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                            "order_by": "name",
                            "order_by_direction": "ASC"
                        }
                    )
                    resp.raise_for_status()
                    data = resp.json().get("data", [])
                    for yc in data:
                        if yc.get("phone") == phone:
                            found = yc
                            break
                    if found or len(data) < page_size:
                        break
                    page += 1
            finally:
                await api.close()

            if not found:
                # –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏
                await message.reply(
                    "‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                return

            # 3) –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –ë–î –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º user_id
            client = Clients(
                yclients_id=found["id"],
                phone_number=phone,
                name=found.get("name", ""),
                points=0,
                is_in_loyalty=True,
                telegram_user_id=telegram_user_id
            )
            client.id = None  
            session.add(client)
            await session.commit()

    # 4) –°–±—Ä–∞—Å—ã–≤–∞–µ–º FSM –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    await state.clear()

    await message.answer(
        f" <b>{client.name}</b>, —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ —á–∏—Å–ª–µ –Ω–∞—à–∏—Ö –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π!\n"
        f"–í–∞—à –Ω–æ–º–µ—Ä <b>{client.phone_number}</b> —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.\n"
        f"–í—ã —Å—Ç–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ <b>DOG STYLE</b> ‚Äî —Ç–µ–ø–µ—Ä—å –∑–∞ –∫–∞–∂–¥–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å—ã –∏ –ø—Ä–∏—è—Ç–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏.\n\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–Ω–æ–ø–∫–∏ \"–ú–µ–Ω—é\" —Å–ª–µ–≤–∞ —Å–Ω–∏–∑—É.\n"
        "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º! ‚ù§Ô∏èü™Ñ",
        parse_mode="HTML",
        reply_markup=ReplyKeyboardRemove()
    )

# 5) –ë–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É
@clients_router.message(Command("balance"))
async def cmd_balance(message: Message):
    async with async_session() as session:
        telegram_user_id = message.from_user.id if message.from_user else None
        if not telegram_user_id:
            return await message.reply("‚ùóÔ∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å /start, –ª–∏–±–æ —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –±–æ—Ç–∞ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –Ω–µ–º —Å–Ω–æ–≤–∞. –í —Å–ª—É—á–∞–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        result = await session.execute(
            select(Clients).where(Clients.telegram_user_id == telegram_user_id)
        )
        client = result.scalar_one_or_none()

    if not client:
        return await message.reply("‚ùóÔ∏è –û—à–∏–±–∫–∞: –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –í—ã –Ω–µ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º\" –≤–Ω–∏–∑—É. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å /start, –ª–∏–±–æ —É–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –±–æ—Ç–∞ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –Ω–µ–º —Å–Ω–æ–≤–∞. –í —Å–ª—É—á–∞–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

    await message.reply(
        f"üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{client.points}</b> –±–∞–ª–ª–æ–≤",
        parse_mode="HTML",
    )

# 6) –ó–∞–ø–∏—Å–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É
@clients_router.message(Command("reserve"))
async def cmd_reserve(message: Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Ç–µ–∫—Å—Ç —Å —Å—Å—ã–ª–∫–æ–π
    await message.answer_photo(
        photo=FSInputFile("app/media/welcome.png"),
        caption=f"üìç–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è:\n\n{settings.YCLIENTS_BOOK_URL}"
    )

# 7) –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–∞–ª–æ–Ω–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É
@clients_router.message(Command("contact"))
async def cmd_contact(message: Message):
    await message.reply(
        f"–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º! –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∑–≤–æ–Ω–∏—Ç–µ.\n"
        f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω: {settings.SUPPORT_PHONE}\n</b>"
        "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å 10:00 –¥–æ 21:00.",
        reply_markup=InlineKeyboardMarkup(
                        inline_keyboard=[
                            [InlineKeyboardButton(text="üìç –ú—ã –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö", url=settings.COMPANY_YMAPS_LINK)]
                        ]
                    )
    )