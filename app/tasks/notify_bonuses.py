# app/tasks/notify_bonuses.py

from app.db.session import async_session
from app.db.models import BonusLog, Clients
from app.bot.dispatcher import bot
from app.config import settings
from sqlmodel import select

async def notify_new_bonuses():
    async with async_session() as session:
        # –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ¬≠—É–≤–µ–¥–æ–º–ª—ë–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
        result = await session.execute(
            select(BonusLog, Clients)
            .join(Clients, BonusLog.client_id == Clients.id)
            .where(BonusLog.is_telegram_notified == False)
        )
        for bonuslog, client in result.fetchall():
            # –µ—Å–ª–∏ —É –∫–ª–∏–µ–Ω—Ç–∞ –µ—Å—Ç—å telegram_user_id - —à–ª—ë–º –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ
            if client.telegram_user_id:
                try:
                    # –ö–Ω–æ–ø–∫–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã
                    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
                    maps_kb = InlineKeyboardMarkup(
                        inline_keyboard=[
                            [InlineKeyboardButton(text="üìç –ú—ã –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö", url=settings.COMPANY_YMAPS_LINK)]
                        ]
                    )
                    await bot.send_message(
                        client.telegram_user_id,
                        f"üéâ –ó–∞ –≤–∞—à –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–æ <b>{bonuslog.points}</b> –±–æ–Ω—É—Å–æ–≤!\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –Ω–∞—Å –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö, –µ—Å–ª–∏ –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –Ω–∞—à–∏ —É—Å–ª—É–≥–∏!",
                        parse_mode="HTML",
                        reply_markup=maps_kb
                    )
                    # –ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                    bonuslog.is_telegram_notified = True
                    session.add(bonuslog)
                    await session.commit()
                except Exception as e:
                    # –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
                    print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")
